@import url("https://fonts.googleapis.com/css2?family=Fira+Sans+Condensed&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Fira+Sans+Condensed:wght@900&display=swap");
// COLORS

$color-green: rgb(43, 216, 158);
$color-black: black;
$color-white: white;

// FONT

$font-text: "Roboto Condensed", sans-serif;
$font-title: "Fira Sans Condensed", sans-serif;
$font-default: 1.6rem;

// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    } //600px
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    } //900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    } //1200px
  }
  @if $breakpoint == desktop {
    @media only screen and (max-width: 95em) {
      @content;
    } //1500px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 130.5em) {
      @content;
    } //1800
  }
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  font-family: $font-text;
}

html {
  // This defines what 1rem is
  font-size: 62.5%; //1 rem = 10px; 10px/16px = 62.5%

  @include respond(tab-land) {
    // width < 1200?
    font-size: 56.25%; //1 rem = 9px, 9/16 = 50%
  }

  @include respond(tab-port) {
    // width < 900?
    font-size: 50%; //1 rem = 8px, 8/16 = 50%
  }

  @include respond(big-desktop) {
    font-size: 75%; //1rem = 12, 12/16
  }
}

body {
  box-sizing: border-box;
  font-size: $font-default;
  overflow-x: hidden;
}
a {
  text-decoration: none;
  color: $color-black;
}
h1,
h2,
h3,
h4 {
  font-family: $font-title;

  & span {
    font-family: $font-title;
  }
}
ul {
  list-style: none;
}

// MIXINS

@mixin button {
  & {
    --border: 5px; /* the border width */
    --slant: 0.7em; /* control the slanted corners */
    --color: $color-black; /* the color */

    padding: 0.4em 1.2em;
    border: none;
    cursor: pointer;
    font-weight: bold;
    // color: $color-black;
    background:
      linear-gradient(to bottom left, $color-black 50%, #0000 50.1%) top right,
      linear-gradient(to top right, $color-black 50%, #0000 50.1%) bottom left;
    background-size: calc(var(--slant) + 1.3 * var(--border))
      calc(var(--slant) + 1.3 * var(--border));
    background-repeat: no-repeat;
    box-shadow:
      0 0 0 200px inset var(--s, #0000),
      0 0 0 var(--border) inset $color-black;
    clip-path: polygon(
      0 0,
      calc(100% - var(--slant)) 0,
      100% var(--slant),
      100% 100%,
      var(--slant) 100%,
      0 calc(100% - var(--slant))
    );
    transition:
      color var(--t, 0.3s),
      background-size 0.3s;
  }
  &:focus-visible {
    outline-offset: calc(-1 * var(--border));
    outline: var(--border) solid #000c;
    clip-path: none;
    background-size: 0 0;
  }
  &:hover,
  &:active {
    background-size: 100% 100%;
    color: #fff;
    --t: 0.2s 0.1s;
  }
  &:active {
    --s: #0005;
    transition: none;
  }
}

@mixin buttonGreen {
  & {
    --border: 5px; /* the border width */
    --slant: 0.7em; /* control the slanted corners */
    --color: $color-black; /* the color */

    padding: 0.4em 1.2em;
    border: none;
    cursor: pointer;
    font-weight: bold;
    // color: $color-black;
    background:
      linear-gradient(to bottom left, $color-green 50%, #0000 50.1%) top right,
      linear-gradient(to top right, $color-green 50%, #0000 50.1%) bottom left;
    background-size: calc(var(--slant) + 1.3 * var(--border))
      calc(var(--slant) + 1.3 * var(--border));
    background-repeat: no-repeat;
    box-shadow:
      0 0 0 200px inset var(--s, #0000),
      0 0 0 var(--border) inset $color-green;
    clip-path: polygon(
      0 0,
      calc(100% - var(--slant)) 0,
      100% var(--slant),
      100% 100%,
      var(--slant) 100%,
      0 calc(100% - var(--slant))
    );
    transition:
      color var(--t, 0.3s),
      background-size 0.3s;
  }
  &:focus-visible {
    outline-offset: calc(-1 * var(--border));
    outline: var(--border) solid #000c;
    clip-path: none;
    background-size: 0 0;
  }
  &:hover,
  &:active {
    background-size: 100% 100%;
    color: #fff;
    --t: 0.2s 0.1s;
  }
  &:active {
    --s: #0005;
    transition: none;
  }
}

@mixin base {
  position: relative;
  top: 17rem;

  width: 50%;
  margin: 0 auto;

  @include respond(desktop) {
    width: 70%;
  }
}
